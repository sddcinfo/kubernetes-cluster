terraform {
  required_providers {
    proxmox = {
      source  = "bpg/proxmox"
      version = "~> 0.68"
    }
  }
}

provider "proxmox" {
  endpoint = "https://10.10.1.21:8006/"
  username = "terraform@pam!terraform"
  password = var.proxmox_token
  insecure = true
  
  ssh {
    agent    = true
    username = "root"
  }
}

variable "proxmox_token" {
  description = "Proxmox API token"
  type        = string
  sensitive   = true
}

# Test configuration for single control plane node
locals {
  test_vm = {
    "k8s-control-01" = {
      target_node = "node1"
      cores       = 4
      memory      = 8192
      disk_size   = 64
      ip_address  = "10.10.1.30"
      vm_id       = 130
      ha_group    = "k8s-control-plane"
      node_type   = "control"
    }
  }
}

# Test VM
resource "proxmox_virtual_environment_vm" "test_control_node" {
  for_each = local.test_vm
  
  name        = each.key
  description = "Test Kubernetes control plane node"
  
  node_name = each.value.target_node
  vm_id     = each.value.vm_id
  
  # Clone from golden image template
  clone {
    vm_id = 9003
  }
  
  # VM resources
  cpu {
    cores = each.value.cores
  }
  
  memory {
    dedicated = each.value.memory
  }
  
  # Storage
  disk {
    datastore_id = "rbd"
    interface    = "scsi0"
    size         = each.value.disk_size
  }
  
  # Network
  network_device {
    bridge = "vmbr0"
    model  = "virtio"
  }
  
  # Cloud-init configuration
  initialization {
    ip_config {
      ipv4 {
        address = "${each.value.ip_address}/24"
        gateway = "10.10.1.1"
      }
    }
    
    dns {
      servers = ["10.10.1.1", "8.8.8.8"]
    }
    
    user_account {
      keys     = [file("~/.ssh/sysadmin_automation_key.pub")]
      password = "kubernetes"
      username = "ubuntu"
    }
    
    user_data_file_id = proxmox_virtual_environment_file.test_cloud_config[each.key].id
  }
  
  # Start VM after creation
  started = true
}

# Test cloud-init configuration
resource "proxmox_virtual_environment_file" "test_cloud_config" {
  for_each = local.test_vm
  
  content_type = "snippets"
  datastore_id = "local"
  node_name    = each.value.target_node
  
  source_raw {
    data = <<-EOF
    #cloud-config
    hostname: ${each.key}
    fqdn: ${each.key}.sddc.local
    manage_etc_hosts: true
    
    users:
      - name: ubuntu
        sudo: ALL=(ALL) NOPASSWD:ALL
        shell: /bin/bash
        ssh_authorized_keys:
          - ${file("~/.ssh/sysadmin_automation_key.pub")}
    
    package_update: false
    package_upgrade: false
    
    runcmd:
      - systemctl enable qemu-guest-agent
      - systemctl start qemu-guest-agent
      - echo "Test control plane node ready"
    EOF
    
    file_name = "${each.key}-test-cloud-config.yml"
  }
}